/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
/* tslint:disable */

import '@stencil/core';




declare global {
  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}

  namespace StencilComponents {

    interface WcVoice2text {
      'continuous': boolean;
      'enabled': boolean;
      'lang': string;
    }
  }


    interface HTMLWcVoice2textElement extends StencilComponents.WcVoice2text, HTMLStencilElement {}

    var HTMLWcVoice2textElement: {
      prototype: HTMLWcVoice2textElement;
      new (): HTMLWcVoice2textElement;
    };
    

  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {
    'wc-voice2text': JSXElements.WcVoice2textAttributes;
    }
  }

  namespace JSXElements {

    export interface WcVoice2textAttributes extends HTMLAttributes {
      'continuous'?: boolean;
      'enabled'?: boolean;
      'lang'?: string;
    }
  }

  interface HTMLElementTagNameMap {
    'wc-voice2text': HTMLWcVoice2textElement
  }

  interface ElementTagNameMap {
    'wc-voice2text': HTMLWcVoice2textElement;
  }
}
declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;